@model Chinmaya.Registration.Models.UpdatePasswordModel
<div class="modal-dialog modal-dialog-centered modal-lg" role="dialog">
	<div class="modal-dialog">
		<div class="modal-content">
			<div class="modal-body">
				@using (Ajax.BeginForm("ChangePassword", "Common", FormMethod.Post,
						new AjaxOptions
						{
							OnSuccess = "OnSuccessChangePassword"
						},
						new { id = "changePassword" }))
				{
					@Html.AntiForgeryToken()
				<h5 class="modal-title">Change Password</h5>
				<div class="row">
					@Html.HiddenFor(m => m.Email, new { id = "passwordEmail" })
					<div class="col-md-12">
						@Html.LabelFor(m => m.OldPassword, new { @class = "requiredA" })
						@Html.TextBoxFor(m => m.OldPassword, new { @class = "form-control", @Name = "OldPassword", @type = "password" })
						@Html.ValidationMessageFor(m => m.OldPassword, "", new { @class = "text-danger" })
					</div>
				</div>
				<div class="row">
					<div class="col-md-12">
						@Html.LabelFor(m => m.NewPassword, new { @class = "requiredA" })
						@Html.TextBoxFor(m => m.NewPassword, new { @class = "form-control", @Name = "NewPassword", @type = "password", @notEqualTo = "#OldPassword" })
						@Html.ValidationMessageFor(m => m.NewPassword, "", new { @class = "text-danger" })
					</div>
				</div>
				<div class="row">
					<div class="col-md-12">
						@Html.LabelFor(m => m.RetypePassword, new { @class = "requiredA" })
						@Html.TextBoxFor(m => m.RetypePassword, new { @class = "form-control", @Name = "RetypePassword", @type = "password" })
						@Html.ValidationMessageFor(m => m.RetypePassword, "", new { @class = "text-danger" })
					</div>
				</div>
				<div class="row">
					<div class="col-md-12">
						<button class="btn btn-secondary float-left mr-3" id="btnCancel" type="button" data-dismiss="modal" name="prevBtn">Cancel <i class="material-icons">cancel</i></button>
						<button class="btn btn-orange" id="btnsubmit" type="submit" data-target="#demo" data-toggle="collapse" name="nextBtn">Submit <i class="material-icons">check_circle</i></button>
					</div>
				</div>
				}
			</div>
		</div>
	</div>
	</div>
<script>
	$(document).ready(function () {
		$.validator.addMethod("notEqualTo", function (value, element, param) {
			var target = $(param);
			if (value) return value != target.val();
			else return this.optional(element);
		}, "can't match with Old Password!");
	});

	function OnSuccessChangePassword(response) {
		if (typeof (response.Message) !== 'undefined') {
			if (response.IsSuccess) {
				toastr.success(response.Message, "Change Password", { timeOut: 3000 });
				$('#changePassword').modal('hide');
				return;
			}
			toastr.error(response.Message, "Change Password");
		}
		$("#btnsubmit").prop("disabled", false);
		$("#btnCancel").prop("disabled", false);
	}
</script>
