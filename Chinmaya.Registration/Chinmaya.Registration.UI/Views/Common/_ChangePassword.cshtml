@model Chinmaya.Registration.Models.UpdatePasswordModel
<div class="modal-dialog modal-dialog-centered" role="dialog">
    <div class="modal-content">
		<div class="modal-body">
			@using (Ajax.BeginForm("ChangePassword", "Common", FormMethod.Post,
				new AjaxOptions
				{
					OnSuccess = "OnSuccessChangePassword"
				},
				new { id = "changePassword" }))
	{
		@Html.AntiForgeryToken()
		<h5 class="modal-title">Change Password</h5>
		<p>
			<span class="red-txt">*</span> Denotes a required field
		</p>
		<div class="row">
			@Html.HiddenFor(m => m.Email, new { id = "passwordEmail" })
			<div class="col-md-12">
				@Html.LabelFor(m => m.OldPassword, new { @class = "requiredA" })
				@Html.TextBoxFor(m => m.OldPassword, new { @class = "form-control", @Name = "OldPassword", @type = "password" })
				@Html.ValidationMessageFor(m => m.OldPassword, "", new { @class = "text-danger" })
			</div>
		</div>
		<div class="row">
			<div class="col-md-12">
				@Html.LabelFor(m => m.NewPassword, new { @class = "requiredA" })
				@Html.TextBoxFor(m => m.NewPassword, new { @class = "form-control", @Name = "NewPassword", @type = "password", @notEqualTo = "#OldPassword" })
				@Html.ValidationMessageFor(m => m.NewPassword, "", new { @class = "text-danger" })
			</div>
		</div>
		<div class="row">
			<div class="col-md-12 form-group">
				@Html.LabelFor(m => m.RetypePassword, new { @class = "requiredA" })
				@Html.TextBoxFor(m => m.RetypePassword, new { @class = "form-control", @Name = "RetypePassword", @type = "password" })
				@Html.ValidationMessageFor(m => m.RetypePassword, "", new { @class = "text-danger" })
			</div>
		</div>
		<div class="row">
			<div class="col-md-12">
				<button class="btn btn-secondary float-left mr-3" id="btnCancelPassword" type="button" data-dismiss="modal">Cancel <i class="material-icons">cancel</i></button>
				<button class="btn btn-orange" id="btnsubmitPassword" type="submit" data-toggle="collapse">Submit <i class="material-icons">check_circle</i></button>
			</div>
		</div>
}
		</div>
    </div>
</div>
<script>
    $(document).ready(function () {
        $.validator.addMethod("notEqualTo", function (value, element, param) {
            var target = $(param);
            if (value) return value != target.val();
            else return this.optional(element);
        }, "Can't match with Old Password!");
    });

	function OnSuccessChangePassword(response) {
		toastr.options = {
			positionClass: 'toast-top-center'
		};
        if (typeof (response.Message) !== 'undefined') {
            if (response.IsSuccess) {
                toastr.success(response.Message, { timeOut: 3000 });
                $('#changePassword').modal('hide');
                return;
            }
            toastr.error(response.Message);
        }
    }
</script>
