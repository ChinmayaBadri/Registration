@model Chinmaya.Registration.Models.UpdateEmail
<div class="modal-dialog modal-dialog-centered" role="dialog">
    <div class="modal-content">
        <div class="modal-body">
            @using (Ajax.BeginForm("ChangeEmail", "Common", FormMethod.Post,
						new AjaxOptions
						{
							OnSuccess = "OnSuccessChangeEmail"
						}, new { id = "form" }))
			{
                @Html.AntiForgeryToken()
                <h5 class="modal-title">Change Email</h5>
				<p><span class="red-txt">*</span> denotes a required field</p>
                    <div class="row">
                        @Html.HiddenFor(m => m.userId, new { id = "uId" })
                        <div class="col-md-12">
                            @Html.LabelFor(m => m.Email, new { @class = "requiredA" })
                            @Html.TextBoxFor(m => m.Email, new { @class = "form-control", @Name = "Email" })
                            @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <button class="btn btn-secondary float-left mr-3" id="btnCancelEmail" type="button" data-dismiss="modal" aria-hidden="true">Cancel <i class="material-icons">cancel</i></button>
                            <button class="btn btn-orange" id="btnsubmitEmail" type="submit" data-toggle="collapse">Submit <i class="material-icons">check_circle</i></button>
                        </div>
                    </div>
            }
        </div>
    </div>
</div>
<script>
	$(document).ready(function () {
		$.validator.unobtrusive.parse($("form"));
	});

	function OnSuccessChangeEmail(response) {
		if (typeof (response.Message) !== 'undefined') {
			if (response.IsSuccess) {
				toastr.success(response.Message, { timeOut: 3000 });
				$('#changeEmail').modal('hide');
				return;
			}
			toastr.error(response.Message);
		}
	}
</script>


