@model Chinmaya.Registration.Models.FamilyMemberModel
<div class="modal-dialog modal-dialog-centered modal-lg" role="document">
	<div class="modal-content">
		<div class="modal-body">
			@using (Ajax.BeginForm("AddFamilyMember", "FamilyMember", FormMethod.Post,
						new AjaxOptions
						{
							OnSuccess = "OnSuccess",
							OnFailure = "OnFailure",
							OnBegin = "OnBegin"
						}, new {id = "form" }))
	{
		
		@Html.AntiForgeryToken()
		if (!string.IsNullOrEmpty(Model.Id))
		{
				<h5 class="modal-title">Edit Family Member</h5>
		}
		else
		{
				<h5 class="modal-title">Add Family Member</h5>
		}
				<p><span class="red-txt">*</span> denotes a required field</p>
		@Html.ValidationSummary(true)
		<div class="row">
			@Html.HiddenFor(m => m.Id, new { id = "fmID" })
			<div class="col-md-6">
				@Html.LabelFor(m => m.FirstName, new { @class = "requiredA" })
				@Html.TextBoxFor(m => m.FirstName, new { @class = "form-control", @Name = "FirstName" })
				@Html.ValidationMessageFor(m => m.FirstName, "", new { @class = "text-danger" })
			</div>
			<div class="col-md-6">
				@Html.LabelFor(m => m.LastName, new { @class = "requiredA" })
				@Html.TextBoxFor(m => m.LastName, new { @class = "form-control", @Name = "LastName" })
				@Html.ValidationMessageFor(m => m.LastName, "", new { @class = "text-danger" })
			</div>

		</div>
		<div class="row">
			<div class="col-md-6">

				@Html.LabelFor(m => m.DOB, new { @class = "requiredA" })
				<div class="input-group date">
				@Html.TextBoxFor(m => m.DOB, "{0:d}", new { @class = "datepicker form-control", @type = "text", @Name = "DOB", @value = "", @style = "height: 35px;" })
				<div class="input-group-addon"><span class="glyphicon glyphicon-th"></span></div></div>
				@Html.ValidationMessageFor(m => m.DOB, "", new { @class = "text-danger" })
				@Html.HiddenFor(m=>m.DOB, new { Id = "DateValue" })
			</div>
				<div class="col-md-6">

					@Html.LabelFor(m => m.RelationshipData, new { @class = "requiredA" })
					@Html.DropDownList("RelationshipData", new SelectList(Model.relationships, "Id", "Name"), "Select", new { @class = "form-control", @style = "height: 35px;" })
					@Html.ValidationMessageFor(m => m.RelationshipData, "", new { @class = "text-danger" })
				</div>
			</div>
		<div class="row">
			<div id="GradeSelectBox" class="col-md-6">
				<label>
					Grade
					<img id="GradeTooltip" src="~/Content/img/info-icon.png" alt="" title="Grade in school (@Model.Year)" />
				</label>
				@Html.DropDownList("Grade", new SelectList(Model.grades, "Id", "Name"), "Select", new { @class = "form-control", @style = "height: 35px;" })
				<label class="text-danger" id="Err_Grade">Grade field is required</label>

			</div>
			<div class="col-md-6">
				@Html.LabelFor(m => m.GenderData)
				@Html.DropDownList("GenderData", new SelectList(Model.genders, "Id", "Name"), "Select", new { @class = "form-control", @style = "height: 35px;" })
				@Html.ValidationMessageFor(m => m.GenderData, "", new { @class = "text-danger" })
			</div>
		</div>
		<div class="row">
			<div class="col-md-6">
				@Html.LabelFor(m => m.CellPhone)
				@Html.TextBoxFor(m => m.CellPhone, new { @class = "form-control", @Name = "CellPhone" })
				@Html.ValidationMessageFor(m => m.CellPhone, "", new { @class = "text-danger" })
			</div>
			<div id="EmailAddress" class="col-md-6">
				@Html.LabelFor(m => m.Email, new { @class = "requiredA" })
				@Html.TextBoxFor(m => m.Email, new { @class = "form-control", @Name = "Email" })
				<label class="text-danger" id="Err_Email">Email field is required</label>
			</div>
		</div>
		<div class="row">
			<div class="col-md-12">
				<button class="btn btn-secondary float-left mr-3" id="btnCancel" type="button" data-dismiss="modal" name="prevBtn">Cancel <i class="material-icons">cancel</i></button>
				@if (!string.IsNullOrEmpty(Model.Id))
				{
					<button class="btn btn-orange" id="btnsubmit" type="submit" data-target="#demo" data-toggle="collapse" name="nextBtn">Update <i class="material-icons">check_circle</i></button>
				}
				else
				{
					<button class="btn btn-orange" id="btnsubmit" type="submit" data-target="#demo" data-toggle="collapse" name="nextBtn">Submit <i class="material-icons">check_circle</i></button>
				}
			</div>
		</div>
			}
		</div>
	</div>
</div>

<script>
	$(document).ready(function () {
		$("#Err_Email").hide();
		$("#Err_Grade").hide();
		$.validator.unobtrusive.parse($("form"));
		var today = new Date();
        $('.datepicker').datepicker({
            todayHighlight: true,
            autoclose: true,
			dateFormat: 'mm-dd-yyyy',
			startDate: '-100y',
			endDate: "today"
        });

	    $('.datepicker').datepicker().on("changeDate", function (e) {
	        var dob = new Date($(this).val());
	        calculateDate(dob);
		});

		$("#Email").on("blur", function () {
			if ($("#Email").val().trim().length != 0) {
				var content = "Dear Family Member, Would you like to subscribe to our Newsletter?";
				$.confirm({
					title: 'Alert!',
					content: content,
					buttons: {
						confirm: {
							text: 'Okay',
							btnClass: 'btn-blue',
							keys: ['enter', 'shift'],
							action: function () {
							}
						},
						danger: {
							text: 'Cancel',
							keys: ['enter', 'shift'],
							action: function () {

							}
						}
					}
				});
			}
		});
	});

	function OnSuccess(response) {
		if (typeof (response.Message) !== 'undefined') {
			if (response.IsSuccess) {
				toastr.success(response.Message, "Add Family Member", { timeOut: 3000 });
				setTimeout(function () {
					window.location.reload();
				}, 2000);
				return;
			}
			toastr.error(response.Message, "Add Family Member");
		}
		$("#btnsubmit").prop("disabled", false);
		$("#btnCancel").prop("disabled", false);
	}

	function OnBegin() { 
		var dob = new Date($("#DOB").val());
		var today = new Date();
		var age = Math.floor((today - dob) / (365.25 * 24 * 60 * 60 * 1000));
		if (age >= 18) {
			if ($("#Email").val().trim().length == 0) {
				$("#Err_Email").show();
				return false;
			}
			else {
				$("#Err_Email").hide();
				return true;
			}
		}
		else
		{
			if ($("#Grade").val().trim().length == 0) {
				$("#Err_Grade").show();
				return false;
			}
			else {
				$("#Err_Grade").hide();
				return true;
			}
		}
	    $("#btnsubmit").prop("disabled", true);
		$("#btnCancel").prop("disabled", true);
	}
</script>

