@model Chinmaya.Registration.Models.AccountDetails
@using Chinmaya.Registration.Models

@{
	ViewBag.Title = "AccountDetails";
	Layout = "~/Views/Shared/_LayoutPageRegister.cshtml";
}

@section Styles {
	<style>
		.column {
			flex: 50%;
		}

		.requiredA:after {
			content: " *";
			font-weight: bold;
			color: red;
		}
	</style>
}

@{
	List<SelectListItem> listItems = new List<SelectListItem>();
	List<SecurityQuestionsModel> sqmList = ViewBag.SecurityQuestions as List<SecurityQuestionsModel>;

	listItems.Add(new SelectListItem
	{
		Text = "Individual Account",
		Value = "1"
	});
	listItems.Add(new SelectListItem
	{
		Text = "Family Account",
		Value = "0",
	});

}

@using (Html.BeginForm("AccountDetails", "Account", FormMethod.Post))

{

	@Html.AntiForgeryToken()
	<div class="container">
		<div class="row">
			<div class="col-md-8 offset-md-2">
				<div class="regi-process-bar">
					<div class="row">
						<div class="col-md-5"><div class="regi-heading">Program/Event Registration</div></div>
						<div class="col-md-7">
							<div class="row bs-wizard">
								<div class="col-md-4 bs-wizard-step complete">
									<div class="progress"><div class="progress-bar"></div></div>
									<a class="bs-wizard-dot" href="javascript: void(0);">1</a>
									<div class="text-center bs-wizard-stepnum marl-55">Personal</div>
								</div>

								<div class="col-md-4 bs-wizard-step complete">

									<div class="progress"><div class="progress-bar"></div></div>
									<a class="bs-wizard-dot" href="javascript: void(0);">2</a>
									<div class="text-center bs-wizard-stepnum">Contact</div>
								</div>

								<div class="col-md-4 bs-wizard-step active">

									<div class="progress"><div class="progress-bar"></div></div>
									<a class="bs-wizard-dot" href="javascript: void(0);">3</a>
									<div class="text-center bs-wizard-stepnum marr-60">Account</div>
								</div>
							</div>
						</div>
					</div>
				</div>
				@Html.ValidationSummary(true)
				<div class="regi-main-1">
					<div class="row">
						<div class="col-md-6 offset-md-3">
							<p class="pb-3">
								<span class="red-txt">*</span> Denotes a required field<br />

							</p>
							@Html.LabelFor(m => m.Email, new { @class = "requiredA" })
							@Html.TextBoxFor(m => m.Email, new { @class = "form-control", autocomplete = "off" })
							@Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
						</div>
					</div>
					<div class="row">
						<div class="col-md-6 offset-md-3">
							@Html.LabelFor(m => m.Password, new { @class = "requiredA" })
							@Html.PasswordFor(m => m.Password, new { @class = "form-control" })
							@Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
						</div>
					</div>
					<div class="row">
						<div class="col-md-6 offset-md-3">
							@Html.LabelFor(m => m.RetypePassword, new { @class = "requiredA" })
							@Html.PasswordFor(m => m.RetypePassword, new { @class = "form-control" })
							@Html.ValidationMessageFor(m => m.RetypePassword, "", new { @class = "text-danger" })
						</div>
					</div>
					<div class="row">
						<div class="col-md-6 offset-md-3">
							@Html.LabelFor(m => m.AccountType, new { @class = "requiredA" })
							@Html.DropDownList("AccountType", new SelectList(listItems, "Value", "Text"), new { @class = "form-control", @style = "height: 35px;" })
							@Html.ValidationMessageFor(m => m.AccountType, "", new { @class = "text-danger" })
						</div>
					</div>
					<div class="row">
						<div class="col-md-6 offset-md-3">
							<span class="red-txt"><br />Please select at least 2 Security Questions.</span>
							@Html.LabelFor(m => m.SecurityQuestionsModel, new { @class = "requiredA" })
							@for (var i = 0; i < sqmList.Count(); i++)
							{
								<div class="row">
									<div id="dataListItem" class="col-md-12">
										<label>
											@sqmList[i].Id.
											@sqmList[i].Name
										</label>
									</div>
								</div>
								<div class="row">
									<div id="dataTextBox" class="col-md-12">
										<input type='text' class="form-control" name="AnswerTextbox_@(i+1)" id="AnswerTextbox_@(i+1)" value="@sqmList[i].Value" autocomplete="off" />
										<span id="errorstatus"></span>
									</div>
								</div>
							}
							@Html.ValidationMessageFor(m => m.SecurityQuestionsModel, "", new { @class = "text-danger" })
						</div>
					</div>

					<div class="row">
						<div class="col-md-6 offset-md-3">
							<br />
							<button class="btn btn-secondary float-left" name="prevBtn" type="submit">Back <i class="material-icons">cancel</i></button>
							<button class="btn btn-orange float-right accountDetails" name="nextBtn" type="submit" data-target="#demo" data-toggle="collapse">Create Account <i class="material-icons">check_circle</i></button>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
}

<script>
	$(document).ready(function () {
		$("#AnswerTextbox_1").on("blur", function () {
			if ($("#AnswerTextbox_1").val().trim().length != 0) {
				var phone = $("#AnswerTextbox_1").val();
				if (!validatePhone('AnswerTextbox_1')) {
					$('#errorstatus').html('Please enter valid phone number');
					$('#errorstatus').css('color', 'red');
					var value = null;
					$("#AnswerTextbox_1").val(value);
				}
				else {
					$('#errorstatus').html(' ');
				}
			}

		});
		function validatePhone(txtPhone) {
			var a = $("#AnswerTextbox_1").val();
			var filter = /^((\+[1-9]{1,4}[ \-]*)|(\([0-9]{2,3}\)[ \-]*)|([0-9]{2,4})[ \-]*)*?[0-9]{3,4}?[ \-]*[0-9]{3,4}?$/;
			if (filter.test(a)) {
				return true;
			}
			else {
				return false;
			}
		}

	});
</script>

@if (ViewBag.Toast != null)
{
	ToastModel tModel = ViewBag.Toast as ToastModel;
	<script>
		toastr.options = {
			positionClass: 'toast-top-center'
		};
        var valid = "@tModel.IsSuccess" == "True" ? true : false;
        var message = "@tModel.Message";
        toastr.error(message);
	</script>
}

@if (ViewBag.IsFamilyMember != null || ViewBag.ApproveMailSent != null)
{
	<script>
        var content = "@ViewBag.ApproveContent";
        $.confirm({
            title: 'Alert!',
            content: content,
            buttons: {
                confirm: {
                    text: 'Okay',
                    btnClass: 'btn-blue',
                    keys: ['enter', 'shift'],
                    action: function () {
                        var url = '@Url.Action("Login", "Account")';
                        window.location.href = url;
                    }
                }
            }
        });
	</script>

}

@if (ViewBag.Message != null)
{
	<script>
        var content = "@ViewBag.Message";
        $.confirm({
            title: 'Alert!',
            content: content,
            buttons: {
                confirm: {
                    text: 'Okay',
                    btnClass: 'btn-blue',
                    keys: ['enter', 'shift'],
                    action: function () {
                        var url = '@Url.Action("Login", "Account")';
                        window.location.href = url;
                    }
                }
            }
        });
	</script>
}

<script>
	$(document).bind('keypress', function (e) {
		var keyCode = e.keyCode || e.which;
		if (keyCode === 13) {
			e.preventDefault();
			$('.accountDetails').trigger('click');
		}
	});
</script>


