@model Chinmaya.Registration.Models.AccountDetails
@using Chinmaya.Registration.Models

@{
	ViewBag.Title = "AccountDetails";
	Layout = "~/Views/Shared/_LayoutPageRegister.cshtml";
}

@section Styles {
    <style>
        .column {
            flex: 50%;
        }

        .requiredA:after {
            content: " *";
            font-weight: bold;
            color: red;
        }
    </style>
}
	
	@{
		List<SelectListItem> listItems = new List<SelectListItem>();
		listItems.Add(new SelectListItem
		{
			Text = "Individual Account",
			Value = "1"
		});
		listItems.Add(new SelectListItem
		{
			Text = "Family Account",
			Value = "0",
		});

	}

	@using (Html.BeginForm("AccountDetails", "Account", FormMethod.Post))

	{

		@Html.AntiForgeryToken()
		<div class="container">
			<div class="row">
				<div class="col-md-8 offset-md-2">
					<div class="regi-process-bar">
						<div class="row">
							<div class="col-md-5"><div class="regi-heading">Program/Event Registration</div></div>
							<div class="col-md-7">
								<div class="row bs-wizard">
									<div class="col-md-4 bs-wizard-step complete">
										<div class="progress"><div class="progress-bar"></div></div>
										<a class="bs-wizard-dot" href="#">1</a>
										<div class="text-center bs-wizard-stepnum marl-55">Personal</div>
									</div>

									<div class="col-md-4 bs-wizard-step complete">

										<div class="progress"><div class="progress-bar"></div></div>
										<a class="bs-wizard-dot" href="#">2</a>
										<div class="text-center bs-wizard-stepnum">Contact</div>
									</div>

									<div class="col-md-4 bs-wizard-step active">

										<div class="progress"><div class="progress-bar"></div></div>
										<a class="bs-wizard-dot" href="#">3</a>
										<div class="text-center bs-wizard-stepnum marr-60">Account</div>
									</div>
								</div>
							</div>
						</div>
					</div>
					@Html.ValidationSummary(true)
					<div class="regi-main-1">
						<div class="row">
							<div class="col-md-6 offset-md-3">
								<p class="pb-3">
									<span class="red-txt">*</span> denotes a required field<br />
									<span class="red-txt">Please select atleast 2 Security Questions.</span>
								</p>
								@Html.LabelFor(m => m.Email, new { @class = "requiredA" })
								@Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
								@Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
							</div>
						</div>
						<div class="row">
							<div class="col-md-6 offset-md-3">
								@Html.LabelFor(m => m.Password, new { @class = "requiredA" })
								@Html.PasswordFor(m => m.Password, new { @class = "form-control" })
								@Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
							</div>
						</div>
						<div class="row">
							<div class="col-md-6 offset-md-3">
								@Html.LabelFor(m => m.RetypePassword, new { @class = "requiredA" })
								@Html.PasswordFor(m => m.RetypePassword, new { @class = "form-control" })
								@Html.ValidationMessageFor(m => m.RetypePassword, "", new { @class = "text-danger" })
							</div>
						</div>
						<div class="row">
							<div class="col-md-6 offset-md-3">
								@Html.LabelFor(m => m.AccountType, new { @class = "requiredA" })
								@Html.DropDownList("AccountType", new SelectList(listItems, "Value", "Text"), new { @class = "form-control" })
								@Html.ValidationMessageFor(m => m.AccountType, "", new { @class = "text-danger" })
							</div>
						</div>
						<div class="row">
							<div class="col-md-6 offset-md-3">
								
								@Html.LabelFor(m => m.SecurityQuestionsModel, new { @class = "requiredA" })
								@for (var i = 0; i < Model.SecurityQuestionsModel.Count(); i++)
								{
							<div class="row">
								<div id="dataListItem" class="col-md-8">
									@Model.SecurityQuestionsModel[i].Id.
									@Model.SecurityQuestionsModel[i].Name
								</div>
								<div id="dataTextBox" class="col-md-4">
                                    <input type='text' class="form-control" name="AnswerTextbox_@(i+1)" id="AnswerTextbox_@(i+1)" value="@Model.SecurityQuestionsModel[i].Value" />
								</div>
							</div>
								}
								@Html.ValidationMessageFor(m => m.SecurityQuestionsModel, "", new { @class = "text-danger" })
							</div>
							</div>

						<div class="row">
							<div class="col-md-6 offset-md-3">
								<br />
								<button class="btn btn-secondary float-left" name="prevBtn" type="submit">Back <i class="material-icons">cancel</i></button>
								<button class="btn btn-orange float-right" name="nextBtn" type="submit" data-target="#demo" data-toggle="collapse">Create Account <i class="material-icons">check_circle</i></button>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	}

@if(ViewBag.Toast != null)
{
    ToastModel tModel = ViewBag.Toast as ToastModel;
    <script>
        var valid = "@tModel.IsSuccess" == "True" ? true : false;
        var message = "@tModel.Message";
        toastr.error(message);
    </script>
}

@if (ViewBag.IsFamilyMember != null || ViewBag.ApproveMailSent != null)
{
    <script>
        var content = "@ViewBag.ApproveContent";
        $.confirm({
            title: 'Alert!',
            content: content,
            buttons: {
                confirm: {
                    text: 'Okay',
                    btnClass: 'btn-blue',
                    keys: ['enter', 'shift'],
                    action: function () {
                        var url = '@Url.Action("Login", "Account")';
                        window.location.href = url;
                    }
                }
            }
        });
    </script>
}

